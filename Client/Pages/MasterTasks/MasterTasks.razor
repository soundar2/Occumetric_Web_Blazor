@page "/masterTasks/industry/{IndustryId:int}"
@using Occumetric.Shared
@inject HttpClient _httpClient
@inject ICommonHttpService _commonHttpService
<h3>Master Tasks</h3>

<p><b>@_errorMessage</b></p>
<a href="/masterTasks/create" class="btn btn-primary">Create Master Task</a>
<h3>Result</h3>
<button @onclick="FetchData">Fetch Data</button>
@if (_isLoading)
{
    <h3>Loading....</h3>
}
@if (_masterTaskViewModels?.Count > 0)
{

    <input type="checkbox" @bind="_showCategories" />

    <table class="table table-striped">
        <thead>
            <tr>
                <td>
                    No.
                </td>
                <th>Id</th>
                <th>Name</th>
                <th>Type</th>
                <th>
                    Description (for Manual Tasks)
                </th>
                <th>Weight to Lift (lb.)</th>
                <th>Begin/End Lifts</th>
                <th>
                    Niosh Index
                </th>
                @if (_showCategories)
                {
                    <th>Categories</th>
                }
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in _masterTaskViewModels)
            {
                <tr>
                    <td>
                        @(++_rowNo)
                    </td>
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.EffortType
                    </td>
                    <td>
                        @item.ShortDescription
                    </td>
                    <td>
                        @item.WeightLb
                    </td>
                    <td>
                        @if (item.EffortType.Contains("Lift"))
                        {
                            <span>@item.FromHeight / @item.ToHeight</span>
                        }
                    </td>
                    <td>
                        @if (item.EffortType.Contains("Lift"))
                        {
                            <NioshBadge NioshValue="@item.LiftingIndex"></NioshBadge>
                        }
                    </td>
                    @if (_showCategories)
                    {
                        <td>
                            @foreach (var tcv in item.TaskCategoryViewModels)
                            {
                                @tcv.Name
                                <br />
                            }
                        </td>
                    }
                    <td>
                        <a href="@($"/masterTasks/update/{item.Id}")" class="btn btn-primary">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>There are no records to show.</p>
}
@code {
    [Parameter] public int IndustryId { get; set; }
    private int _rowNo = 0;
    private List<MasterTaskViewModel> _masterTaskViewModels { get; set; } = new List<MasterTaskViewModel>();
    private string _errorMessage = "";
    private bool _isLoading = true;
    private bool _showCategories = false;
    protected async override void OnInitialized()
    {
        base.OnInitialized();
        await FetchData();

    }
    private async Task FetchData()
    {
        try
        {
            _masterTaskViewModels = await _commonHttpService.GetMasterTasksForIndustry(IndustryId);
            _rowNo = 0;
            _isLoading = false;
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine("Exception");
            Console.WriteLine(e.Message);
            _errorMessage = e.Message;

        }
    }
    private void ToggleShowCategories()
    {
        _showCategories = !_showCategories;
    }
}
